#!/usr/bin/env python

from __future__ import division
from other.core import *
from other.core.value import parser
from other.core.utility import tryfile
from interface import *

# Parse arguments
history = PropManager.add('history','').set_required(True).set_help('record thread execution history to given file')
parser.parse('Thread history visualization',positional=[history])

def draw_history(history):
  import pylab
  colors = list('bgrcmyk'*4)
  start = min(times.min() for n,entries in history for _,times in entries)
  legend_artists = []
  legend_labels = []
  name_to_color = {}
  axes = pylab.figure().add_subplot(111)
  for n,entries in history:
    for name,times in entries:
      if 'idle' not in name:
        if name not in name_to_color:
          color = name_to_color[name] = colors.pop()
          pylab.plot([0],[0],color=color,label=name,linewidth=5)
        else:
          color = name_to_color[name]
        lo = len(history)-n
        times = times.copy()
        times[:,1] -= times[:,0]
        times[:,0] -= start
        axes.broken_barh(times,(lo,.8),edgecolor=color,facecolor=color,label=name)
  axes.legend()
  pylab.show()

draw_history(tryfile.read(history()))
