### Example commands for predict:

Meaningless: ./predict --ranks 1 --threads 8 --save 20 --memory 3G --meaningless 4 00000000
Test: ./predict --ranks 1 --threads 8 --save 34 --memory 3G 44444554
Mira (Blue Gene/Q): ./predict --ranks 49152 --threads 64 --save 18 --memory 8G 00000000

### Hopper configuration

Hopper has 6384 nodes, each with 24 cores and 32 GB of RAM.  We'll do our initial round of
performance tests on four nodes.  6 cores share a L3 cache, so we clearly want to use either
6, 12, or 24 threads per rank.  So we want to run three tests.

  ./predict --ranks 16 --threads 6 --save 0 --memory 4G 44444444 # 6 threads, low memory
  ./predict --ranks 16 --threads 6 --save 0 --memory 6G 44444444 # 6 threads, more memory

  ./predict --ranks 8 --threads 12 --save 0 --memory 8G 44444444 # 12 threads, low memory
  ./predict --ranks 8 --threads 12 --save 0 --memory 12G 44444444 # 12 threads, high memory

  ./predict --ranks 4 --threads 6 --save 0 --memory 4G 44444454

I should also test the best one of these with half machine utilization to see whether I'm
bandwidth limited.
